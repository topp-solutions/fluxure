# This template contains all of the possible sections and their default values

# Note that all fields that take a lint level have these possible values:
# * deny - An error will be produced and the check will fail
# * warn - A warning will be produced, but the check will not fail
# * allow - No warning or error will be produced, though in some cases a note
# will be

# The values provided in this template are the default values that will be used
# when any section or field is not specified in your own configuration

# Root options

# The graph table configures how the dependency graph is constructed and thus
# which crates the checks are performed against
[graph]
# If true, metadata will be collected with `--all-features`. Note that this can't
# be toggled off if true, if you want to conditionally enable `--all-features` it
# is recommended to pass `--all-features` on the cmd line instead
all-features = true

# This section is considered when running `cargo deny check licenses`
# More documentation for the licenses section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html
[licenses]
# List of explicitly allowed licenses
# See https://spdx.org/licenses/ for list of possible licenses
# [possible values: any SPDX 3.11 short identifier (+ optional exception)].
allow = [
    "Apache-2.0",         # https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)
    "BSL-1.0",            # https://www.tldrlegal.com/license/boost-software-license-1-0-explained
    "ISC",                # https://www.tldrlegal.com/license/isc-license
    "MIT",                # https://tldrlegal.com/license/mit-license
    "OFL-1.1",            # https://www.tldrlegal.com/license/open-font-license-ofl-explained
    "LicenseRef-UFL-1.0", # https://ubuntu.com/legal/font-licence/faq
    "Unicode-3.0",        # https://opensource.org/license/unicode-license-v3
    "Zlib",               # https://www.tldrlegal.com/license/zlib-libpng-license-zlib
]
# The confidence threshold for detecting a license from license text.
# The higher the value, the more closely the license text must be to the
# canonical license text of a valid SPDX license file.
# [possible values: any between 0.0 and 1.0].
confidence-threshold = 0.93

# This section is considered when running `cargo deny check bans`.
# More documentation about the 'bans' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html
[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "deny"
# Lint level for when a crate version requirement is `*`
wildcards = "deny"
# Skip crates when denying duplicate versions (use specific version constraints)
skip = [
    { crate = "bitflags:1.3.2", reason = "old 1.0 version via glutin, png, spirv, â€¦" },
    { crate = "redox_syscall:0.4.1", reason = "old version via winit" },
    { crate = "core-foundation:<=0.9.4", reason = "webbrowser already on 0.10.0, others at 0.9.4" },
]
# Skip crates and their dependencies when denying duplicate versions (use specific version constraints)
skip-tree = [
    { crate = "windows-sys:<=0.52", reason = "glutin pulls in 0.52.0, accesskit pulls in 0.59.0, rfd pulls 0.48, webbrowser pulls 0.45.0 (via jni)" },
]
# Ban particular crates
deny = [
    { crate = "openssl", use-instead = "rustls" },
    { crate = "openssl-sys", use-instead = "rustls" },
]


# This section is considered when running `cargo deny check sources`.
# More documentation about the 'sources' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html
[sources]
# Lint level for what to happen when a crate from a crate registry that is not
# in the allow list is encountered
unknown-registry = "deny"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "deny"
